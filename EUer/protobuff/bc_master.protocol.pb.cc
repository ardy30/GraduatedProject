// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bc_master.protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bc_master {

namespace {

const ::google::protobuf::Descriptor* pb_MSG_BC_MASTER_APPLY_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pb_MSG_BC_MASTER_APPLY_reflection_ = NULL;
const ::google::protobuf::Descriptor* pb_MSG_BC_MASTER_APPLY_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pb_MSG_BC_MASTER_APPLY_ACK_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_bc_5fmaster_2eprotocol_2eproto() {
  protobuf_AddDesc_bc_5fmaster_2eprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bc_master.protocol.proto");
  GOOGLE_CHECK(file != NULL);
  pb_MSG_BC_MASTER_APPLY_descriptor_ = file->message_type(0);
  static const int pb_MSG_BC_MASTER_APPLY_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY, instanceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY, number_),
  };
  pb_MSG_BC_MASTER_APPLY_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pb_MSG_BC_MASTER_APPLY_descriptor_,
      pb_MSG_BC_MASTER_APPLY::default_instance_,
      pb_MSG_BC_MASTER_APPLY_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pb_MSG_BC_MASTER_APPLY));
  pb_MSG_BC_MASTER_APPLY_ACK_descriptor_ = file->message_type(1);
  static const int pb_MSG_BC_MASTER_APPLY_ACK_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY_ACK, ip_),
  };
  pb_MSG_BC_MASTER_APPLY_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pb_MSG_BC_MASTER_APPLY_ACK_descriptor_,
      pb_MSG_BC_MASTER_APPLY_ACK::default_instance_,
      pb_MSG_BC_MASTER_APPLY_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pb_MSG_BC_MASTER_APPLY_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pb_MSG_BC_MASTER_APPLY_ACK));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bc_5fmaster_2eprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pb_MSG_BC_MASTER_APPLY_descriptor_, &pb_MSG_BC_MASTER_APPLY::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pb_MSG_BC_MASTER_APPLY_ACK_descriptor_, &pb_MSG_BC_MASTER_APPLY_ACK::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bc_5fmaster_2eprotocol_2eproto() {
  delete pb_MSG_BC_MASTER_APPLY::default_instance_;
  delete pb_MSG_BC_MASTER_APPLY_reflection_;
  delete pb_MSG_BC_MASTER_APPLY_ACK::default_instance_;
  delete pb_MSG_BC_MASTER_APPLY_ACK_reflection_;
}

void protobuf_AddDesc_bc_5fmaster_2eprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030bc_master.protocol.proto\022\tbc_master\"<\n"
    "\026pb_MSG_BC_MASTER_APPLY\022\022\n\nInstanceID\030\001 "
    "\002(\t\022\016\n\006number\030\002 \002(\005\"(\n\032pb_MSG_BC_MASTER_"
    "APPLY_ACK\022\n\n\002IP\030\001 \003(\t", 141);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bc_master.protocol.proto", &protobuf_RegisterTypes);
  pb_MSG_BC_MASTER_APPLY::default_instance_ = new pb_MSG_BC_MASTER_APPLY();
  pb_MSG_BC_MASTER_APPLY_ACK::default_instance_ = new pb_MSG_BC_MASTER_APPLY_ACK();
  pb_MSG_BC_MASTER_APPLY::default_instance_->InitAsDefaultInstance();
  pb_MSG_BC_MASTER_APPLY_ACK::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bc_5fmaster_2eprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bc_5fmaster_2eprotocol_2eproto {
  StaticDescriptorInitializer_bc_5fmaster_2eprotocol_2eproto() {
    protobuf_AddDesc_bc_5fmaster_2eprotocol_2eproto();
  }
} static_descriptor_initializer_bc_5fmaster_2eprotocol_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int pb_MSG_BC_MASTER_APPLY::kInstanceIDFieldNumber;
const int pb_MSG_BC_MASTER_APPLY::kNumberFieldNumber;
#endif  // !_MSC_VER

pb_MSG_BC_MASTER_APPLY::pb_MSG_BC_MASTER_APPLY()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pb_MSG_BC_MASTER_APPLY::InitAsDefaultInstance() {
}

pb_MSG_BC_MASTER_APPLY::pb_MSG_BC_MASTER_APPLY(const pb_MSG_BC_MASTER_APPLY& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pb_MSG_BC_MASTER_APPLY::SharedCtor() {
  _cached_size_ = 0;
  instanceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pb_MSG_BC_MASTER_APPLY::~pb_MSG_BC_MASTER_APPLY() {
  SharedDtor();
}

void pb_MSG_BC_MASTER_APPLY::SharedDtor() {
  if (instanceid_ != &::google::protobuf::internal::kEmptyString) {
    delete instanceid_;
  }
  if (this != default_instance_) {
  }
}

void pb_MSG_BC_MASTER_APPLY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pb_MSG_BC_MASTER_APPLY::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pb_MSG_BC_MASTER_APPLY_descriptor_;
}

const pb_MSG_BC_MASTER_APPLY& pb_MSG_BC_MASTER_APPLY::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bc_5fmaster_2eprotocol_2eproto();  return *default_instance_;
}

pb_MSG_BC_MASTER_APPLY* pb_MSG_BC_MASTER_APPLY::default_instance_ = NULL;

pb_MSG_BC_MASTER_APPLY* pb_MSG_BC_MASTER_APPLY::New() const {
  return new pb_MSG_BC_MASTER_APPLY;
}

void pb_MSG_BC_MASTER_APPLY::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_instanceid()) {
      if (instanceid_ != &::google::protobuf::internal::kEmptyString) {
        instanceid_->clear();
      }
    }
    number_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pb_MSG_BC_MASTER_APPLY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string InstanceID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instanceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->instanceid().data(), this->instanceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }
      
      // required int32 number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pb_MSG_BC_MASTER_APPLY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string InstanceID = 1;
  if (has_instanceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->instanceid().data(), this->instanceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->instanceid(), output);
  }
  
  // required int32 number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pb_MSG_BC_MASTER_APPLY::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string InstanceID = 1;
  if (has_instanceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->instanceid().data(), this->instanceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instanceid(), target);
  }
  
  // required int32 number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pb_MSG_BC_MASTER_APPLY::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string InstanceID = 1;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instanceid());
    }
    
    // required int32 number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pb_MSG_BC_MASTER_APPLY::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pb_MSG_BC_MASTER_APPLY* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pb_MSG_BC_MASTER_APPLY*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pb_MSG_BC_MASTER_APPLY::MergeFrom(const pb_MSG_BC_MASTER_APPLY& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instanceid()) {
      set_instanceid(from.instanceid());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pb_MSG_BC_MASTER_APPLY::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pb_MSG_BC_MASTER_APPLY::CopyFrom(const pb_MSG_BC_MASTER_APPLY& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pb_MSG_BC_MASTER_APPLY::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void pb_MSG_BC_MASTER_APPLY::Swap(pb_MSG_BC_MASTER_APPLY* other) {
  if (other != this) {
    std::swap(instanceid_, other->instanceid_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pb_MSG_BC_MASTER_APPLY::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pb_MSG_BC_MASTER_APPLY_descriptor_;
  metadata.reflection = pb_MSG_BC_MASTER_APPLY_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pb_MSG_BC_MASTER_APPLY_ACK::kIPFieldNumber;
#endif  // !_MSC_VER

pb_MSG_BC_MASTER_APPLY_ACK::pb_MSG_BC_MASTER_APPLY_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pb_MSG_BC_MASTER_APPLY_ACK::InitAsDefaultInstance() {
}

pb_MSG_BC_MASTER_APPLY_ACK::pb_MSG_BC_MASTER_APPLY_ACK(const pb_MSG_BC_MASTER_APPLY_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pb_MSG_BC_MASTER_APPLY_ACK::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pb_MSG_BC_MASTER_APPLY_ACK::~pb_MSG_BC_MASTER_APPLY_ACK() {
  SharedDtor();
}

void pb_MSG_BC_MASTER_APPLY_ACK::SharedDtor() {
  if (this != default_instance_) {
  }
}

void pb_MSG_BC_MASTER_APPLY_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pb_MSG_BC_MASTER_APPLY_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pb_MSG_BC_MASTER_APPLY_ACK_descriptor_;
}

const pb_MSG_BC_MASTER_APPLY_ACK& pb_MSG_BC_MASTER_APPLY_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bc_5fmaster_2eprotocol_2eproto();  return *default_instance_;
}

pb_MSG_BC_MASTER_APPLY_ACK* pb_MSG_BC_MASTER_APPLY_ACK::default_instance_ = NULL;

pb_MSG_BC_MASTER_APPLY_ACK* pb_MSG_BC_MASTER_APPLY_ACK::New() const {
  return new pb_MSG_BC_MASTER_APPLY_ACK;
}

void pb_MSG_BC_MASTER_APPLY_ACK::Clear() {
  ip_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pb_MSG_BC_MASTER_APPLY_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string IP = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ip(0).data(), this->ip(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_IP;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pb_MSG_BC_MASTER_APPLY_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string IP = 1;
  for (int i = 0; i < this->ip_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->ip(i).data(), this->ip(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->ip(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pb_MSG_BC_MASTER_APPLY_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string IP = 1;
  for (int i = 0; i < this->ip_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip(i).data(), this->ip(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->ip(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pb_MSG_BC_MASTER_APPLY_ACK::ByteSize() const {
  int total_size = 0;
  
  // repeated string IP = 1;
  total_size += 1 * this->ip_size();
  for (int i = 0; i < this->ip_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ip(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pb_MSG_BC_MASTER_APPLY_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pb_MSG_BC_MASTER_APPLY_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pb_MSG_BC_MASTER_APPLY_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pb_MSG_BC_MASTER_APPLY_ACK::MergeFrom(const pb_MSG_BC_MASTER_APPLY_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  ip_.MergeFrom(from.ip_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pb_MSG_BC_MASTER_APPLY_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pb_MSG_BC_MASTER_APPLY_ACK::CopyFrom(const pb_MSG_BC_MASTER_APPLY_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pb_MSG_BC_MASTER_APPLY_ACK::IsInitialized() const {
  
  return true;
}

void pb_MSG_BC_MASTER_APPLY_ACK::Swap(pb_MSG_BC_MASTER_APPLY_ACK* other) {
  if (other != this) {
    ip_.Swap(&other->ip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pb_MSG_BC_MASTER_APPLY_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pb_MSG_BC_MASTER_APPLY_ACK_descriptor_;
  metadata.reflection = pb_MSG_BC_MASTER_APPLY_ACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bc_master

// @@protoc_insertion_point(global_scope)
